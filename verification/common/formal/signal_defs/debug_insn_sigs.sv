// Generated by gen_checker_inst.py
bit is_CSRRS;
assign is_CSRRS = CSRRS(instr_word);

bit is_SRLI;
assign is_SRLI = SRLI(instr_word);

bit is_BEQ;
assign is_BEQ = BEQ(instr_word);

bit is_SLT;
assign is_SLT = SLT(instr_word);

bit is_ADDI;
assign is_ADDI = ADDI(instr_word);

bit is_ORI;
assign is_ORI = ORI(instr_word);

bit is_SUB;
assign is_SUB = SUB(instr_word);

bit is_AND;
assign is_AND = AND(instr_word);

bit is_ADD;
assign is_ADD = ADD(instr_word);

bit is_CSRRC;
assign is_CSRRC = CSRRC(instr_word);

bit is_AUIPC;
assign is_AUIPC = AUIPC(instr_word);

bit is_FENCE;
assign is_FENCE = FENCE(instr_word);

bit is_LH;
assign is_LH = LH(instr_word);

bit is_ANDI;
assign is_ANDI = ANDI(instr_word);

bit is_SLLI;
assign is_SLLI = SLLI(instr_word);

bit is_CSRRWI;
assign is_CSRRWI = CSRRWI(instr_word);

bit is_SRA;
assign is_SRA = SRA(instr_word);

bit is_JALR;
assign is_JALR = JALR(instr_word);

bit is_OR;
assign is_OR = OR(instr_word);

bit is_DIV;
assign is_DIV = DIV(instr_word);

bit is_DIVU;
assign is_DIVU = DIVU(instr_word);

bit is_MUL;
assign is_MUL = MUL(instr_word);

bit is_MULH;
assign is_MULH = MULH(instr_word);

bit is_MULHSU;
assign is_MULHSU = MULHSU(instr_word);

bit is_MULHU;
assign is_MULHU = MULHU(instr_word);

bit is_REM;
assign is_REM = REM(instr_word);

bit is_REMU;
assign is_REMU = REMU(instr_word);


bit is_FENCE_I;
assign is_FENCE_I = FENCE_I(instr_word);

bit is_CSRRSI;
assign is_CSRRSI = CSRRSI(instr_word);

bit is_SW;
assign is_SW = SW(instr_word);

bit is_LUI;
assign is_LUI = LUI(instr_word);

bit is_SLL;
assign is_SLL = SLL(instr_word);

bit is_CSRRW;
assign is_CSRRW = CSRRW(instr_word);

bit is_SH;
assign is_SH = SH(instr_word);

bit is_SLTI;
assign is_SLTI = SLTI(instr_word);

bit is_LBU;
assign is_LBU = LBU(instr_word);

bit is_XOR;
assign is_XOR = XOR(instr_word);

bit is_EBREAK;
assign is_EBREAK = EBREAK(instr_word);

bit is_SRAI;
assign is_SRAI = SRAI(instr_word);

bit is_JAL;
assign is_JAL = JAL(instr_word);

bit is_LB;
assign is_LB = LB(instr_word);

bit is_BLT;
assign is_BLT = BLT(instr_word);

bit is_SLTIU;
assign is_SLTIU = SLTIU(instr_word);

bit is_LHU;
assign is_LHU = LHU(instr_word);

bit is_BGE;
assign is_BGE = BGE(instr_word);

bit is_BNE;
assign is_BNE = BNE(instr_word);

bit is_XORI;
assign is_XORI = XORI(instr_word);

bit is_SRL;
assign is_SRL = SRL(instr_word);

bit is_SB;
assign is_SB = SB(instr_word);

bit is_BGEU;
assign is_BGEU = BGEU(instr_word);

bit is_LW;
assign is_LW = LW(instr_word);

bit is_CSRRCI;
assign is_CSRRCI = CSRRCI(instr_word);

bit is_BLTU;
assign is_BLTU = BLTU(instr_word);

bit is_ECALL;
assign is_ECALL = EBREAK(instr_word);

bit is_SLTU;
assign is_SLTU = SLTU(instr_word);

